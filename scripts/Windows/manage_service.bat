@echo off
setlocal EnableDelayedExpansion

:: ƒê∆∞·ªùng d·∫´n script - Thay ƒë·ªïi theo th∆∞ m·ª•c th·ª±c t·∫ø c·ªßa b·∫°n
set SCRIPT_DIR=%~dp0
set SERVICE_NAME=WellspringAttendanceSync
set PYTHON_SCRIPT=%SCRIPT_DIR%hikcon.py
set LOG_FILE=%SCRIPT_DIR%sync.log
set ERROR_LOG=%SCRIPT_DIR%sync_error.log

:: L·∫•y tham s·ªë ƒë·∫ßu v√†o
set ACTION=%1

if "%ACTION%"=="start" goto START
if "%ACTION%"=="stop" goto STOP
if "%ACTION%"=="restart" goto RESTART
if "%ACTION%"=="status" goto STATUS
if "%ACTION%"=="logs" goto LOGS
if "%ACTION%"=="test" goto TEST
if "%ACTION%"=="install" goto INSTALL
if "%ACTION%"=="uninstall" goto UNINSTALL
goto HELP

:START
echo üöÄ B·∫Øt ƒë·∫ßu service attendance sync...
echo.
echo T·∫°o scheduled task ƒë·ªÉ ch·∫°y m·ªói 5 ph√∫t...

schtasks /create /tn "%SERVICE_NAME%" /tr "cmd /c \"%SCRIPT_DIR%run_sync.bat\"" /sc minute /mo 5 /f >nul 2>&1

if %errorlevel%==0 (
    echo ‚úÖ Service ƒë√£ ƒë∆∞·ª£c kh·ªüi ƒë·ªông v√† s·∫Ω ch·∫°y m·ªói 5 ph√∫t
    echo üìù Logs s·∫Ω ƒë∆∞·ª£c ghi v√†o:
    echo    - Output: %LOG_FILE%
    echo    - Error: %ERROR_LOG%
) else (
    echo ‚ùå L·ªói khi t·∫°o scheduled task. B·∫°n c√≥ th·ªÉ c·∫ßn ch·∫°y v·ªõi quy·ªÅn Administrator
)
goto END

:STOP
echo üõë D·ª´ng service attendance sync...
schtasks /delete /tn "%SERVICE_NAME%" /f >nul 2>&1

if %errorlevel%==0 (
    echo ‚úÖ Service ƒë√£ ƒë∆∞·ª£c d·ª´ng
) else (
    echo ‚ö†Ô∏è Service c√≥ th·ªÉ ƒë√£ ƒë∆∞·ª£c d·ª´ng tr∆∞·ªõc ƒë√≥ ho·∫∑c ch∆∞a ƒë∆∞·ª£c t·∫°o
)
goto END

:RESTART
echo üîÑ Kh·ªüi ƒë·ªông l·∫°i service...
call :STOP
timeout /t 2 >nul
call :START
goto END

:STATUS
echo üìä Tr·∫°ng th√°i service:
schtasks /query /tn "%SERVICE_NAME%" >nul 2>&1

if %errorlevel%==0 (
    echo ‚úÖ Service ƒëang ch·∫°y
    schtasks /query /tn "%SERVICE_NAME%" /fo LIST | findstr /C:"Task Name" /C:"Status" /C:"Next Run Time"
) else (
    echo ‚ùå Service kh√¥ng ch·∫°y
)
goto END

:LOGS
echo üìù Xem logs g·∫ßn nh·∫•t:
echo === OUTPUT LOGS ===
if exist "%LOG_FILE%" (
    powershell -Command "Get-Content '%LOG_FILE%' | Select-Object -Last 20"
) else (
    echo Ch∆∞a c√≥ logs
)
echo.
echo === ERROR LOGS ===
if exist "%ERROR_LOG%" (
    powershell -Command "Get-Content '%ERROR_LOG%' | Select-Object -Last 20"
) else (
    echo Ch∆∞a c√≥ error logs
)
goto END

:TEST
echo üß™ Test ch·∫°y script m·ªôt l·∫ßn...
call "%SCRIPT_DIR%run_sync.bat"
goto END

:INSTALL
echo üîß C√†i ƒë·∫∑t dependencies v√† thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng...
call "%SCRIPT_DIR%setup_windows.bat"
goto END

:UNINSTALL
echo üóëÔ∏è G·ª° b·ªè service...
call :STOP
echo ‚úÖ Service ƒë√£ ƒë∆∞·ª£c g·ª° b·ªè
goto END

:HELP
echo C√°ch s·ª≠ d·ª•ng: %0 {start^|stop^|restart^|status^|logs^|test^|install^|uninstall}
echo.
echo C√°c l·ªánh:
echo   start     - B·∫Øt ƒë·∫ßu service (ch·∫°y m·ªói 5 ph√∫t)
echo   stop      - D·ª´ng service
echo   restart   - Kh·ªüi ƒë·ªông l·∫°i service
echo   status    - Ki·ªÉm tra tr·∫°ng th√°i service
echo   logs      - Xem logs g·∫ßn nh·∫•t
echo   test      - Ch·∫°y th·ª≠ script m·ªôt l·∫ßn
echo   install   - C√†i ƒë·∫∑t dependencies v√† thi·∫øt l·∫≠p
echo   uninstall - G·ª° b·ªè service
echo.
echo V√≠ d·ª•:
echo   %0 install    - Thi·∫øt l·∫≠p l·∫ßn ƒë·∫ßu
echo   %0 test       - Test ch·∫°y m·ªôt l·∫ßn
echo   %0 start      - B·∫Øt ƒë·∫ßu service t·ª± ƒë·ªông

:END
endlocal 